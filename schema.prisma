generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Post {
  id       Int      @id @default(autoincrement())
  title    String   @db.Char(255)
  Content  String   @db.Text
  createAt DateTime @unique @default(now())
  updateAt DateTime @unique @updatedAt
  publish  Boolean  @default(true)
  Tag      Tag[]    @relation("PostToTag")

  @@index([id])
}

model Tag {
  id       Int      @id @default(autoincrement())
  name     String   @unique @db.Char(255)
  createAt DateTime @unique @default(now())
  updateAt DateTime @unique @updatedAt
  Post     Post[]   @relation("PostToTag")

  @@index([id])
}

model Comment {
  commentId       String   @id @default(uuid())
  content         String   @unique @db.Char(255)
  parentCommentId String?
  createAt        DateTime @default(now())
  updateAt        DateTime @updatedAt
  postId          Int
  authorId        String
  author          User     @relation(fields: [authorId], references: [id])

  @@index([authorId, commentId, parentCommentId, postId])
}

model User {
  id       String    @id @default(uuid()) // UUID or OAuth id
  username String // username
  password String // password
  profile  Profile?
  comment  Comment[]
  is_admin  Boolean @default(false)
  is_oauth Boolean   @default(false)

  @@index([id, username, password])
}

model Profile {
  id   String @id // UUID or OAuth id
  name String @unique
  user User   @relation(fields: [id], references: [id])

  @@index([id])
}
